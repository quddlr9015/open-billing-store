# Production Environment Configuration

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:mysql://prod-db:3306/open_billing_store}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:5}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Redis Configuration
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.database=${REDIS_DB:0}
spring.data.redis.timeout=2000ms

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:open-billing-store-prod}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.producer.retries=3
spring.kafka.producer.acks=all

# Logging Configuration
logging.level.io.open_billing_store=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.springframework.kafka=WARN

# Server Configuration
server.port=${SERVER_PORT:8080}
server.compression.enabled=true

# Security Configuration
spring.security.debug=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized